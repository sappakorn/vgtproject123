<!DOCTYPE html>
<html lang="th">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ชื่อร้าน</title>

  <!-- jquery -->
  <script src="jquery/jquery.js"></script>
  <!--  -->

  <!-- boostrap css -->
  <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css">
  <!--  -->
  <link
    href="https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
    rel="stylesheet">

  
    
  <style>
    * {
      padding: 0px;
      margin: 0px;
      font-family: "Kanit", sans-serif;
      font-weight: 500;
      font-style: normal;
    }

    #fixed-bottoms {
      padding-top: 10px;
      border-top: 1px solid #2d2c2c;
      background-color: #242424;
    }

    .position-relative {
      position: relative;
    }

    .product-img {
      width: 100%;
      height: auto;
    }

    .soldOutImage {
      top: 30px;
      left: 7px;
      width: 93%;
      height: 30%;
      object-fit: cover;
      opacity: 0.9;
      z-index: 10;
      pointer-events: none;
      transform: rotate(-25deg);
    }
  </style>
</head>

<body>
 
  <nav class="navbar navbar-expand-lg d-flex justify-content-between align-items-center navbar-dark bg-dark sticky-top">
    <a class="navbar-brand d-flex" href="/customer_home">
      <img class="ms-2" style="width:54; height:40px;" src="/img/logo-sm.png" alt="">
      <p style="color:#ff7300;font-size: 15px;padding-top: 15px;">VGTPROJECT</p>
    </a>

    <div style="display: flex; align-items: center;">
      <a class="btn" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight"
        aria-controls="offcanvasRight">
        <img src="/img/shopping-cart.png" style="height: 30px; width: 30px; margin-right: 10px;" alt="">
      </a>
      <p style="position: relative; 
              top: -8.8px;
              font: bold;
              left: -30px;
              color: #ffffff; 
              height: 26px; width: 26px; 
              border-radius: 50%; 
              background-color: rgb(255, 200, 0); font-size: 16px; line-height: 26px;
              " class="text-center m-0" id="numberOfItems"><strong>0</strong></p>
    </div>
  </nav>

  <!-- ofcanvas-->
  <div class="offcanvas offcanvas-end " tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasRightLabel">ตะกร้าสินค้า</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body" id="cartItems">
      <!-- รายการสินค้าในตะกร้าจะถูกเพิ่มเข้ามาที่นี่ -->
    </div>

    <form id="checkoutForm" method="post" action="">
      <div class="text-center mt-2">
        <button id="checkout-button" class="btn btn-success form-control py-2 rounded-0 ">ชำระเงิน</button>
      </div>
    </form>
  </div>
  <!--  -->
  


  <br>
  
  <div class="d-flex justify-content-between pb-2 mx-2" id="findbrabra">
    <div class="btn-group">
      <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        ชนิดผัก
      </button>
      <ul class="dropdown-menu"></ul>
    </div>
    <input class="form-control ms-2" oninput="searchProduct(this)" type="text" id="searchBox"
      placeholder="ค้นหาสินค้า...">
  </div>

  <div class="mt-5 display-1 text-center no-results-message" style="display: none;">ไม่มีสินค้าที่ค้นหา</div>

  <div class="container">
    <div id="card-out">
    </div>
    <div class="row">
      
      <% product_list.forEach(product=> { %>
        <% let count=0 %>
        <% const count_old = product.quantity %>
        <input type="hidden" class="count_old" value="<%=count_old %>">

        <div class="col col-xl-2 mt-2 product-item d-flex justify-content-center"
          style="max-height: auto; padding-right: 0px !important; padding-left: 0px !important; margin-right: 0px !important;">
          <div class="card pt-2" id="product-items" style="width: 10rem;">
            <% if (product.quantity===0) { %>
              <img src="/img/out-off-stock.png" class="soldOutImage position-absolute">
              <% } %>
                
                <img src="<%= product.product_img %>" class="card-img-top" alt="..."
                  style="height: 100px !important; object-fit: contain;">
                <h5 class="card-title text-center">
                  <%= product.productname %>
                </h5>
                <div class="card-body">
                  <p class="card-text text-center">
                    <%= product.price %> บาท / <%= product.unit %>
                  </p>
                </div>
                
                <input name="product_id" type="hidden" value="<%= product.product_id %>">
                <input name="productType" type="hidden" value="<%= product.unit %>">
                <input name="productName" type="hidden" value="<%= product.productname %>">
                <input name="productPrice" type="hidden" value="<%= product.price %>">
                <input name="quantity" type="hidden" value="<%= product.quantity %>">
                <input name="store_id" type="hidden" value="<%= store_id %>">
                <input name="product_img" type="hidden" value="<%= product.product_img %>" >

                
                <% if (product.quantity===0) { %>
                  <div class="p-2">
                    <button type="button" class="btn btn-secondary form-control" style="font-size: 0.8rem;"
                      disabled>สินค้าหมด</button>
                  </div>
                  <% } else { %>
                    <div class="p-2 d-flex justify-content-between">

                      <button type="button" class="btn btn-outline-danger  deleteToCartButton" 
                        style="font-size: 0.8rem;">-</button>

                      <label for="" id="count"> 0 </label>
                      
                      <button type="button" class="btn btn-outline-success addToCartButton "  id="outStock" style="font-size: 0.8rem;" >+</button>

                    </div>
                    
                   
                <% } %>
          </div>
        </div>
        <% }); %>
    </div>
  </div>
  
  <br><br><br><br><br><br><br><br>
  <div class="align-content-center border border-primary-subtle-1  bg-primary-subtle  text-center py-3 sticky-bottom">
    ราคารวม
    <label for="totalPrice" id="totalPrice"></label> <!-- แสดงราคารวม -->
  </div>

<!-- boostrap js -->
<script src="/bootstrap/js/bootstrap.bundle.min.js"></script>
<!--  -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  function addToCart(product) {
    let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
    let productIndex = cart.findIndex(item => item.product_id === product.product_id);
    
    // ดึงจำนวนสินค้าทั้งหมดที่มีอยู่
    let productCard = $(`.card:has(input[name="product_id"][value="${product.product_id}"])`);
    let totalQuantity = parseInt(productCard.find('input[name="quantity"]').val());

    if (productIndex !== -1) {
      // ตรวจสอบว่าการเพิ่มสินค้าจะไม่เกินจำนวนที่มีอยู่
      if (cart[productIndex].quantity + product.quantity <= totalQuantity) {
        cart[productIndex].quantity += product.quantity;
      } else {
        Swal.fire({
          title: 'สินค้าไม่เพียงพอ',
          text: 'ไม่สามารถเพิ่มสินค้าได้เนื่องจากเกินจำนวนที่มีอยู่',
          icon: 'error',
          confirmButtonText: 'เข้าใจแล้ว'
        });
        return; // ออกจากฟังก์ชันโดยไม่เพิ่มสินค้า
      }
    } else {
      if (product.quantity <= totalQuantity) {
        cart.push(product);
      } else {
        Swal.fire({
          title: 'สินค้าไม่เพียงพอ',
          text: 'ไม่สามารถเพิ่มสินค้าได้เนื่องจากเกินจำนวนที่มีอยู่',
          icon: 'error',
          confirmButtonText: 'เข้าใจแล้ว'
        });
        return;
      }
    }

    sessionStorage.setItem('cart', JSON.stringify(cart));
    updateCartItemCount();
    updateCartItems();
    updateProductCount(product.product_id);
  }

  function deleteitem(productId) {
    let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
    let productIndex = cart.findIndex(item => item.product_id === productId);

    if (productIndex !== -1) {
      cart[productIndex].quantity -= 1;

      if (cart[productIndex].quantity <= 0) {
        cart.splice(productIndex, 1);
      }

      sessionStorage.setItem('cart', JSON.stringify(cart));

      updateCartItemCount();
      updateCartItems();
      updateProductCount(productId);

      // เปิดใช้งานปุ่มเพิ่มสินค้าอีกครั้งหลังจากลบสินค้า
      let productCard = $(`.card:has(input[name="product_id"][value="${productId}"])`);
      productCard.find('.addToCartButton').prop("disabled", false);
    }
  }

  function updateCartItemCount() {
    let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
    let totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    let totalprice = cart.reduce((sum, item) => sum + (item.productPrice * item.quantity), 0);
    $('#numberOfItems').text(totalItems);
    $('#totalPrice').text(totalprice);
  }

  function updateCartItems() {
    let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
    let cartItemsHtml = '';

    cart.forEach(item => {
      cartItemsHtml += `
        <div class="cart-item">
          <h6>${item.productName}</h6>
          <p>${item.productPrice} บาท / ${item.productType}     จำนวน: ${item.quantity}</p>
          <button class="btn btn-sm btn-danger remove-item" data-product-id="${item.product_id}">ลบ</button>
        </div>
      `;
    });
    $('#cartItems').html(cartItemsHtml);

    // เพิ่ม event listener สำหรับปุ่มลบสินค้า
    $('.remove-item').click(function() {
      let productId = $(this).data('product-id');
      deleteitem(productId);
    });
  }

  function updateProductCount(productId) {
    let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
    let product = cart.find(item => item.product_id === productId);

    let productCard = $(`.card:has(input[name="product_id"][value="${productId}"])`);
    let countLabel = productCard.find('#count');
    let countOldInput = productCard.find('input[name="quantity"]');
    let addButton = productCard.find('.addToCartButton');

    const countOld = parseInt(countOldInput.val());

    if (product) {
      countLabel.text(product.quantity);
      
      if (product.quantity >= countOld) {
        addButton.prop("disabled", true);
        Swal.fire({
          title: 'สินค้าไม่เพียงพอ',
          text: 'ขออภัย สินค้าชิ้นนี้หมดแล้ว',
          icon: 'error',
          confirmButtonText: 'เข้าใจแล้ว'
        });
      } else {
        addButton.prop("disabled", false);
      }
    } else {
      countLabel.text(0);
      addButton.prop("disabled", false);
    }
  }

  function checkProductStatus() {
    $('.card').each(function() {
      let productId = $(this).find('input[name="product_id"]').val();
      let totalQuantity = parseInt($(this).find('input[name="quantity"]').val());
      let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
      let cartItem = cart.find(item => item.product_id === productId);
      
      if (cartItem && cartItem.quantity >= totalQuantity) {
        $(this).find('.addToCartButton').prop("disabled", true);
      }
    });
  }

  $(document).ready(function () {
    sessionStorage.clear();
    updateCartItemCount();
    updateCartItems();
    checkProductStatus();

    $('.addToCartButton').click(function () {
      let productCard = $(this).closest('.card');
      let product = {
        product_id: productCard.find('input[name="product_id"]').val(),
        productName: productCard.find('input[name="productName"]').val(),
        productType: productCard.find('input[name="productType"]').val(),
        store_id: productCard.find('input[name="store_id"]').val(),  // store_id
        product_img: productCard.find('input[name="product_img"]').val(),
        productPrice: parseFloat(productCard.find('input[name="productPrice"]').val()),
        quantity: 1,
        
        
      };
      
      let totalQuantity = parseInt(productCard.find('input[name="quantity"]').val());
      let currentQuantity = parseInt(productCard.find('#count').text());

      if (currentQuantity < totalQuantity) {
        addToCart(product);
      } else {
        Swal.fire({
          title: 'สินค้าไม่เพียงพอ',
          text: 'ไม่สามารถเพิ่มสินค้าได้เนื่องจากเกินจำนวนที่มีอยู่',
          icon: 'error',
          confirmButtonText: 'เข้าใจแล้ว'
        });
      }
    });

    $('.deleteToCartButton').click(function () {
      let productCard = $(this).closest('.card');
      let productId = productCard.find('input[name="product_id"]').val();
      deleteitem(productId);
    });

    $('#checkout-button').click(function (event) {
      event.preventDefault();
      let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
      $.ajax({
        url: '/confirm_order',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ cart: cart }),
        success: function (response) {
          console.log('ส่งข้อมูลสำเร็จ:', response);
          sessionStorage.removeItem('cart');
          window.location.href = '/confirm_order';
        },
        error: function (error) {
          console.error('การส่งข้อมูลผิดพลาด:', error);
        }
      });
    });

    $(window).on('storage', function(e) {
      if (e.originalEvent.key === 'cart') {
        updateCartItemCount();
        updateCartItems();
        checkProductStatus();
      }
    });
  });

  $(window).on('beforeunload', function() {
    sessionStorage.clear();
  });

   
  </script>

  <script>
    function searchProduct(input) {
      var searchText = input.value.toLowerCase();
      var products = document.getElementsByClassName('product-item');
      var hasMatch = false;
      Array.from(products).forEach(function (product) {
        var productName = product.getElementsByClassName('card-title')[0].innerText.toLowerCase();
        if (productName.includes(searchText)) {
          product.style.display = 'block';
          hasMatch = true;
        } else {
          product.style.display = 'none';
        }
      });
      if (!hasMatch) {
        showNoResultsMessage();
      } else {
        hideNoResultsMessage();
      }
    }

    function showNoResultsMessage() {
      var noResultsMessage = document.querySelector('.no-results-message');
      noResultsMessage.style.display = 'block';
    }

    function hideNoResultsMessage() {
      var noResultsMessage = document.querySelector('.no-results-message');
      noResultsMessage.style.display = 'none';
    }
  </script>

</body>
</html>